<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>eu.aparicio.david</groupId>
    <artifactId>voivi</artifactId>
    <version>0.0.2-SNAPSHOT</version>

    <properties>
        <!-- JAVA VERSION USED = JAVA 8 -->
        <javac.version>1.8</javac.version>
        <!-- the main verticle class name -->
        <main.verticle>eu.aparicio.david.voivi.WebVerticle</main.verticle>
        <vertx.version>3.3.2</vertx.version>
        <junit.version>4.12</junit.version>
        <utili.version>3.4</utili.version>
        <gsonp.version>2.7</gsonp.version>
        <sfire.version>2.19.1</sfire.version>
        <StNLP.version>3.6.0</StNLP.version>
        <slf4j.version>1.7.21</slf4j.version>
        <mvncp.version>3.5.1</mvncp.version>
        <shade.version>2.4.3</shade.version>
        <mvnex.version>1.4.0</mvnex.version>
        <itrst.version>3.0.0</itrst.version>
        <itatj.version>3.5.1</itatj.version>
        <ithlp.version>1.11</ithlp.version>
        <itest.version>2.19.1</itest.version>
        <itawa.version>2.0.0</itawa.version>
        <itant.version>1.8</itant.version>
        <mongo.version>1.50.5</mongo.version>
        <javad.version>2.10.4</javad.version>
        <IT.configfile>config[IT].json</IT.configfile> <!-- [] helps to remove the last line in the ps -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    </properties>


    <dependencies>
        <!-- VERT.X Dependencies -->
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-core</artifactId>
            <version>${vertx.version}</version>
        </dependency>
        <!-- VERT.X WEB Dependencies -->
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-web</artifactId>
            <version>${vertx.version}</version>
        </dependency>
        <!-- Hazelcast (Cluster) Dependencies -->
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-hazelcast</artifactId>
            <version>${vertx.version}</version>
        </dependency>
        <!-- String isNullOrBlank function -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${utili.version}</version>
        </dependency>
        <!-- VERT.X TEST Dependencies -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-unit</artifactId>
            <version>${vertx.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>${gsonp.version}</version>
        </dependency>
        <!-- IT Tests - Some packages -->
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <version>${itrst.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <version>${itawa.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${itatj.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- VERT.X MongoDB Dependencies -->
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-mongo-client</artifactId>
            <version>${vertx.version}</version>
        </dependency>
        <!-- Stanford Dependencies -->
        <dependency>
            <groupId>edu.stanford.nlp</groupId>
            <artifactId>stanford-corenlp</artifactId>
            <version>${StNLP.version}</version>
        </dependency>
        <dependency>
            <groupId>edu.stanford.nlp</groupId>
            <artifactId>stanford-corenlp</artifactId>
            <version>${StNLP.version}</version>
            <classifier>models</classifier>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
    </dependencies>

    <build>
        <testResources>
            <!-- IT Tests - Need to enable the filtering of the src/test/resources to inject the random port -->
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>
        <plugins>
            <!-- COMPILATION -->
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${mvncp.version}</version>
                <configuration>
                    <source>${javac.version}</source>
                    <target>${javac.version}</target>
                    <showDeprecation>true</showDeprecation>
                    <showWarnings>true</showWarnings>
                    <optimize>true</optimize>
                </configuration>
            </plugin>
            <!-- FAT-JAR for the package -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>${shade.version}</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <transformers>
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <manifestEntries>
                                        <Main-Class>io.vertx.core.Launcher</Main-Class>
                                        <Main-Verticle>${main.verticle}</Main-Verticle>
                                    </manifestEntries>
                                </transformer>
                            </transformers>
                            <artifactSet/>
                            <outputFile>${project.build.directory}/${project.artifactId}-${project.version}-fat.jar</outputFile>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- IT Tests - Pick an unused random port, the selected port is set into the "http.port" variable -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>${ithlp.version}</version>
                <executions>
                    <execution>
                        <id>reserve-network-port</id>
                        <goals>
                            <goal>reserve-network-port</goal>
                        </goals>
                        <phase>process-sources</phase>
                        <configuration>
                            <portNames>
                                <portName>http.port</portName>
                            </portNames>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- IT Tests - Failsafe Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${itest.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <systemProperties>
                                <http.port>${http.port}</http.port>
                            </systemProperties>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- IT Tests - We use the maven-antrun-plugin to start the application before the integration tests and stop them afterward -->
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>${itant.version}</version>
                <executions>
                    <execution>
                        <id>start-vertx-app</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <!-- Launch the application as in 'production' using the fatjar. We pass the generated configuration, configuring the http port to the picked one -->
                                <exec executable="${java.home}/bin/java"
                                      dir="${project.build.directory}"
                                      spawn="true">
                                    <arg value="-jar"/>
                                    <arg value="${project.artifactId}-${project.version}-fat.jar"/>
                                    <arg value="-conf"/>
                                    <arg value="${project.build.directory}/test-classes/configIT.json"/>
                                    <arg value="-worker"/>
                                    <!--arg valeu="-Dorg.slf4j.simpleLogger.logFile"/>
                                    <arg valeu="target/TESTIT.log"/-->
                                </exec>
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>stop-vertx-app</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <!-- Kill the started process. Finding the right process is a bit tricky. -->
                            <target>
                                <exec executable="bash"
                                      dir="${project.build.directory}"
                                      spawn="false">
                                    <arg value="-c"/>
                                    <arg value="ps -A | grep -Ei '[\-]DtestPort=${http.port}\s+\-jar\s+${project.artifactId}' | awk '{print $1}' | xargs kill -SIGTERM"/>
                                </exec>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${javad.version}</version>
            </plugin>
        </plugins>
    </reporting>

</project>